name: Java CI with Gradle, Build and Push Docker Image to ECS and deploy in EC2
on:
  push:
    branches: [ "feat/add-githubaction-CI/CD" ]

env:
  AWS_REGION: ap-northeast-2             # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: weatherservice         # set this to your Amazon ECR repository name
  ECR_REGISTRY: public.ecr.aws/a5p8o7q9
  SSH_USERNAME: ubuntu
  HOST: ec2-15-165-235-188.ap-northeast-2.compute.amazonaws.com
  EC2_instance_publicIP: 15.165.235.188



permissions:
  contents: read



jobs:
  build:

    runs-on: ubuntu-latest

    # Ref: https://github.com/gradle/gradle-build-action
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: v1
          #id 가 login-ecr 인 step의 ouput중 reigistry 를 변수로 가져옴
          ECR_REGISTRY: public.ecr.aws/a5p8o7q9
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:v1 -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:v1
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:v1" >> $GITHUB_OUTPUT

      - name: SSH into EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_instance_publicIP }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            docker pull ${{env.ECR_REGISTRY}}/weahterservice:v1
            docker rm -f weatherservice || true && docker run -itd --name weatherservice -p 8080:8080 ${{env.ECR_REGISTRY}}/weatherservice:v1